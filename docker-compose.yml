version: '2.1'
services:
  puchat-proxy:
    build: ./pugchat-proxy/
    depends_on:
      - api
    ports:
      - "80:80"
  api:
    build: ./api/
    environment:
      PORT: '5000'
      SHOW_URLS: 'true'
      USERS_URL: 'users-ms'
      USERS_PORT: '4002'
      USERS_ENTRY: 'users'
      NOTIFICATION_URL: 'notification-ms'
      NOTIFICATION_PORT: '4001'
      NOTIFICATION_ENTRY: 'notifications'
      STATES_URL: 'pugchat-state'
      STATES_PORT: '8000'
      STATES_ENTRY: 'api/States'
      AUTH_URL: 'auth-ms'
      AUTH_PORT: '3000'
      AUTH_ENTRY: ''
      CHAT_URL: 'chat-ms'
      CHAT_PORT: '8080'
      CHAT_ENTRY: 'messages/'
      MULTIMEDIA_URL: 'multimedia-ms'
      MULTIMEDIA_PORT: '8081'
      MULTIMEDIA_ENTRY: 'entries'
  users-db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: PugChat_users_ms_development
      MYSQL_USER: root
      MYSQL_PASSWORD: root
  users-ms:
    build: ./users-ms/
    command: bash -c "sleep 40 && rm -f tmp/pids/server.pid && bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rails db:seed && bundle exec rails s -b '0.0.0.0'"
    environment:
      PORT: '4002'
    depends_on:
      - users-db
  notification-db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: mysecretpw
      MYSQL_DATABASE: PugChat_notification_ms_development
      MYSQL_USER: sa
      MYSQL_PASSWORD: 2019ii
  notification-ms:
    build: ./notification-ms/
    command: bash -c "sleep 40 && rm -f tmp/pids/server.pid && bundle exec rails db:create && bundle exec rails db:migrate && bundle exec rails db:seed && bundle exec rails s -b '0.0.0.0'"
    environment:
      PORT: '4001'
    depends_on:
      - notification-db
  pugchat-state-db:
    image: mysql:5.7
    environment:
      MYSQL_ROOT_PASSWORD: 123
      MYSQL_DATABASE: pugchat-state-db
      MYSQL_USER: pugchat
      MYSQL_PASSWORD: 2019ii
  pugchat-state:
    build: ./state-ms/
    command: python pugchat-status/manage.py runserver 0.0.0.0:8000
    environment:
      PORT: '8000'
    depends_on:
      - pugchat-state-db
  chat-mongo:
    container_name: hk-mongodb
    image: mongo
    command: --port 27018
  chat-ms:
    build: ./chat-ms/
    environment: 
      PORT: '8080'
    depends_on:
      - chat-mongo
  multimedia-ms:
    build: ./multimedia-ms/
    command: sh -c "./wait-for-it.sh db:3306;fresh;"
    environment: 
      PORT: '8081'
    depends_on:
      - multimedia-db
  multimedia-db:
    image: mysql:8.0
    volumes:
      - /db/mysql_init:/docker-entrypoint-initdb.d
      - /db/mysql_data:/var/lib/mysql
      - /db/config/charset.cnf:/etc/mysql/conf.d/charset.cnf
    environment:
      MYSQL_DATABASE: pugchat_multimedia_db
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
  auth-ms:
    build: ./auth-ms/
    command: node server.js
    environment: 
      PORT: '3000'
    depends_on:
      - "mongo"
      - "sa-ldap"
  mongo:
    image: "mongo"
  sa-ldap:
    image: osixia/openldap:1.1.8
    environment:
      COMPOSE_HTTP_TIMEOUT: 200
      LDAP_LOG_LEVEL: "256"
      LDAP_ORGANISATION: "PugChat"
      LDAP_DOMAIN: "pugchat.com.co"
      LDAP_BASE_DN: ""
      LDAP_ADMIN_PASSWORD: "123"
      LDAP_CONFIG_PASSWORD: "123"
      LDAP_READONLY_USER: "false"
      #LDAP_READONLY_USER_USERNAME: "readonly"
      #LDAP_READONLY_USER_PASSWORD: "readonly"
      LDAP_BACKEND: "hdb"
      LDAP_TLS: "true"
      LDAP_TLS_CRT_FILENAME: "ldap.crt"
      LDAP_TLS_KEY_FILENAME: "ldap.key"
      LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      LDAP_TLS_ENFORCE: "false"
      LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      LDAP_TLS_PROTOCOL_MIN: "3.1"
      LDAP_TLS_VERIFY_CLIENT: "demand"
      LDAP_REPLICATION: "false"
      #LDAP_REPLICATION_CONFIG_SYNCPROV: "binddn="cn=admin,cn=config" bindmethod=simple credentials=$LDAP_CONFIG_PASSWORD searchbase="cn=config" type=refreshAndPersist retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_DB_SYNCPROV: "binddn="cn=admin,$LDAP_BASE_DN" bindmethod=simple credentials=$LDAP_ADMIN_PASSWORD searchbase="$LDAP_BASE_DN" type=refreshAndPersist interval=00:00:00:10 retry="60 +" timeout=1 starttls=critical"
      #LDAP_REPLICATION_HOSTS: "#PYTHON2BASH:['ldap://ldap.example.org','ldap://ldap2.example.org']"
      LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - /var/lib/ldap
      - /etc/ldap/slapd.d
      - /container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"
    hostname: "pugchat.com.co"      
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
        PHPLDAPADMIN_LDAP_HOSTS: "sa-ldap"
        PHPLDAPADMIN_HTTPS: "false"
    ports:
        - "8085:80"
    links:
        - sa-ldap
